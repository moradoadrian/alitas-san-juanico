import{$c as Y,$d as Ya,Ac as x,Ad as xa,Ae as xb,Bc as y,Bd as ya,Be as yb,Cc as z,Cd as za,Ce as zb,Dc as A,Dd as Aa,Ec as B,Ed as Ba,Fc as C,Fd as Ca,Gc as D,Gd as Da,Hc as E,Hd as Ea,Ic as F,Id as Fa,Jc as G,Jd as Ga,Kc as H,Kd as Ha,Lc as I,Ld as Ia,Mc as J,Md as Ja,Nc as K,Nd as Ka,Oc as L,Od as La,Pc as M,Pd as Ma,Qc as N,Qd as Na,Rc as O,Rd as Oa,Sc as P,Sd as Pa,Tc as Q,Td as Qa,Uc as R,Ud as Ra,Vc as S,Vd as Sa,Wc as T,Wd as Ta,Xc as U,Xd as Ua,Yc as V,Yd as Va,Zc as W,Zd as Wa,_c as X,_d as Xa,ad as Z,ae as Za,bd as _,be as _a,cc as a,cd as $,ce as $a,dc as b,dd as aa,de as ab,ec as c,ed as ba,ee as bb,fc as d,fd as ca,fe as cb,gc as e,gd as da,ge as db,hc as f,hd as ea,he as eb,ic as g,id as fa,ie as fb,jc as h,jd as ga,je as gb,kc as i,kd as ha,ke as hb,lc as j,ld as ia,le as ib,mc as k,md as ja,me as jb,nc as l,nd as ka,ne as kb,oc as m,od as la,oe as lb,pc as n,pd as ma,pe as mb,qc as o,qd as na,qe as nb,rc as p,rd as oa,re as ob,sc as q,sd as pa,se as pb,tc as r,td as qa,te as qb,uc as s,ud as ra,ue as rb,vd as sa,ve as sb,wc as t,wd as ta,we as tb,xc as u,xd as ua,xe as ub,yc as v,yd as va,ye as vb,zc as w,zd as wa,ze as wb}from"./chunk-E72J4ASJ.js";export{I as AbstractUserDataWriter,u as AggregateField,v as AggregateQuerySnapshot,w as Bytes,s as CACHE_SIZE_UNLIMITED,q as CollectionReference,p as DocumentReference,M as DocumentSnapshot,x as FieldPath,y as FieldValue,ga as Firestore,c as FirestoreError,ha as FirestoreInstances,ja as FirestoreModule,z as GeoPoint,r as LoadBundleTask,ca as PersistentCacheIndexManager,o as Query,D as QueryCompositeFilterConstraint,B as QueryConstraint,O as QueryDocumentSnapshot,H as QueryEndAtConstraint,C as QueryFieldFilterConstraint,F as QueryLimitConstraint,E as QueryOrderByConstraint,P as QuerySnapshot,G as QueryStartAtConstraint,L as SnapshotMetadata,k as Timestamp,_ as Transaction,A as VectorValue,Z as WriteBatch,f as _AutoId,m as _ByteString,n as _DatabaseId,h as _DocumentKey,e as _EmptyAppCheckTokenProvider,d as _EmptyAuthCredentialsProvider,g as _FieldPath,fa as _TestingHooks,j as _cast,b as _debugAssert,ea as _internalAggregationQueryToProtoRunAggregationQueryRequest,da as _internalQueryToProtoQueryTarget,l as _isBase64Available,a as _logWarn,i as _validateIsNotUsedTogether,wa as addDoc,xa as aggregateFieldEqual,ya as aggregateQuerySnapshotEqual,za as and,ba as arrayRemove,aa as arrayUnion,la as auditTrail,J as average,Aa as clearIndexedDbPersistence,Ba as collection,na as collectionChanges,oa as collectionCount,pa as collectionCountSnap,qa as collectionData,Ca as collectionGroup,ma as collectionSnapshots,Da as connectFirestoreEmulator,K as count,Ea as deleteAllPersistentCacheIndexes,Fa as deleteDoc,Ga as deleteField,Ha as disableNetwork,Ia as disablePersistentCacheIndexAutoCreation,Ja as doc,sa as docData,ra as docSnapshots,Ka as documentId,N as documentSnapshotFromJSON,La as enableIndexedDbPersistence,Ma as enableMultiTabIndexedDbPersistence,Na as enableNetwork,Oa as enablePersistentCacheIndexAutoCreation,Pa as endAt,Qa as endBefore,t as ensureFirestoreConfigured,S as executeWrite,ia as firestoreInstance$,ta as fromRef,Ra as getAggregateFromServer,Sa as getCountFromServer,Ta as getDoc,Ua as getDocFromCache,Va as getDocFromServer,Wa as getDocs,Xa as getDocsFromCache,Ya as getDocsFromServer,Za as getFirestore,_a as getPersistentCacheIndexManager,$a as increment,ab as initializeFirestore,bb as limit,cb as limitToLast,db as loadBundle,T as memoryEagerGarbageCollector,V as memoryLocalCache,U as memoryLruGarbageCollector,eb as namedQuery,fb as onSnapshot,R as onSnapshotResume,gb as onSnapshotsInSync,hb as or,ib as orderBy,W as persistentLocalCache,Y as persistentMultipleTabManager,X as persistentSingleTabManager,ka as provideFirestore,jb as query,kb as queryEqual,Q as querySnapshotFromJSON,lb as refEqual,mb as runTransaction,$ as serverTimestamp,nb as setDoc,ob as setIndexConfiguration,pb as setLogLevel,ua as snapToData,qb as snapshotEqual,va as sortedChanges,rb as startAfter,sb as startAt,tb as sum,ub as terminate,vb as updateDoc,wb as vector,xb as waitForPendingWrites,yb as where,zb as writeBatch};
